name: Node.js CI and Deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  API_KEY: ${{ secrets.API_KEY }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: dev/front/plan.io

    strategy:
      matrix:
        node-version: [20.x]
    environment: env_plan_io

    steps:
      # Check out the repository
      - uses: actions/checkout@v4

      # Debugging information
      - name: Print Current Directory
        run: pwd
      - name: List Directory Contents
        run: ls

      # Set OpenSSL legacy provider (if needed)
      - name: Fix OpenSSL Compatibility
        run: export NODE_OPTIONS=--openssl-legacy-provider

      # Set up Node.js environment and cache npm dependencies
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      # Install dependencies
      - name: Install Dependencies
        run: npm install

      # Clean install dependencies and build
      # - name: Build Project
      #   run: |
      #     npm ci
      #     npm run build --if-present
      #     npm test
      - name: Build
        run: npm run build
      # Deploy the build to the EC2 instance
      - name: Deploy to EC2
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
        run: |
          # Create the .pem file
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 400 ~/.ssh/id_rsa
          
 
          # Add the EC2 instance to known_hosts
          sudo ssh-keyscan -H ec2-3-212-238-155.compute-1.amazonaws.com >> ~/.ssh/known_hosts

          # Copy the build folder to the EC2 instance
          sudo scp -i ~/.ssh/id_rsa -r ./build/ ubuntu@ec2-3-212-238-155.compute-1.amazonaws.com:/var/www/html/plan.io/build

          # Restart the server
          sudo ssh -i ~/.ssh/id_rsa ubuntu@ec2-3-212-238-155.compute-1.amazonaws.com "sudo systemctl restart nginx"
